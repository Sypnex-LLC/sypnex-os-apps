{
  "app_metadata": {
    "id": "ad40ffa9-39e4-4322-ac48-46dead3fb2f4",
    "name": "Calculator",
    "description": "A simple calculator app for basic mathematical operations",
    "icon": "fas fa-calculator",
    "keywords": [
      "calculator",
      "math",
      "arithmetic",
      "utility"
    ],
    "author": "Sypnex OS",
    "version": "1.0.0",
    "type": "user_app",
    "scripts": [
      "script.js"
    ],
    "settings": [
      {
        "key": "DECIMAL_PRECISION",
        "name": "Decimal Precision",
        "type": "number",
        "value": 8,
        "description": "Number of decimal places to display in results"
      }
    ]
  },
  "files": {
    "ad40ffa9-39e4-4322-ac48-46dead3fb2f4.app": "ew0KICAiaWQiOiAiYWQ0MGZmYTktMzllNC00MzIyLWFjNDgtNDZkZWFkM2ZiMmY0IiwNCiAgIm5hbWUiOiAiQ2FsY3VsYXRvciIsDQogICJkZXNjcmlwdGlvbiI6ICJBIHNpbXBsZSBjYWxjdWxhdG9yIGFwcCBmb3IgYmFzaWMgbWF0aGVtYXRpY2FsIG9wZXJhdGlvbnMiLA0KICAiaWNvbiI6ICJmYXMgZmEtY2FsY3VsYXRvciIsDQogICJrZXl3b3JkcyI6IFsNCiAgICAiY2FsY3VsYXRvciIsDQogICAgIm1hdGgiLA0KICAgICJhcml0aG1ldGljIiwNCiAgICAidXRpbGl0eSINCiAgXSwNCiAgImF1dGhvciI6ICJTeXBuZXggT1MiLA0KICAidmVyc2lvbiI6ICIxLjAuMCIsDQogICJ0eXBlIjogInVzZXJfYXBwIiwNCiAgInNjcmlwdHMiOiBbInNjcmlwdC5qcyJdLA0KICAic2V0dGluZ3MiOiBbDQogICAgew0KICAgICAgImtleSI6ICJERUNJTUFMX1BSRUNJU0lPTiIsDQogICAgICAibmFtZSI6ICJEZWNpbWFsIFByZWNpc2lvbiIsDQogICAgICAidHlwZSI6ICJudW1iZXIiLA0KICAgICAgInZhbHVlIjogOCwNCiAgICAgICJkZXNjcmlwdGlvbiI6ICJOdW1iZXIgb2YgZGVjaW1hbCBwbGFjZXMgdG8gZGlzcGxheSBpbiByZXN1bHRzIg0KICAgIH0NCiAgXQ0KfQ==",
    "ad40ffa9-39e4-4322-ac48-46dead3fb2f4.html": ""
  },
  "package_info": {
    "format_version": "1.0",
    "created_at": "2025-08-16T03:39:53.424479",
    "packaged_by": "Sypnex OS App Packager",
    "source_directory": "C:\\Users\\bruce\\OneDrive\\Desktop\\AI Research\\sypnex-os-apps\\official\\calculator"
  }
}