{
  "app_metadata": {
    "id": "image_viewer",
    "name": "Image Viewer",
    "description": "A simple image viewer for browsing and viewing images from the Virtual File System",
    "icon": "fas fa-image",
    "keywords": [
      "image",
      "viewer",
      "photos",
      "pictures",
      "gallery"
    ],
    "author": "Sypnex OS",
    "version": "1.0.0",
    "type": "user_app",
    "settings": []
  },
  "files": {
    "image_viewer.app": "ew0KICAiaWQiOiAiaW1hZ2Vfdmlld2VyIiwNCiAgIm5hbWUiOiAiSW1hZ2UgVmlld2VyIiwNCiAgImRlc2NyaXB0aW9uIjogIkEgc2ltcGxlIGltYWdlIHZpZXdlciBmb3IgYnJvd3NpbmcgYW5kIHZpZXdpbmcgaW1hZ2VzIGZyb20gdGhlIFZpcnR1YWwgRmlsZSBTeXN0ZW0iLA0KICAiaWNvbiI6ICJmYXMgZmEtaW1hZ2UiLA0KICAia2V5d29yZHMiOiBbDQogICAgImltYWdlIiwNCiAgICAidmlld2VyIiwNCiAgICAicGhvdG9zIiwNCiAgICAicGljdHVyZXMiLA0KICAgICJnYWxsZXJ5Ig0KICBdLA0KICAiYXV0aG9yIjogIlN5cG5leCBPUyIsDQogICJ2ZXJzaW9uIjogIjEuMC4wIiwNCiAgInR5cGUiOiAidXNlcl9hcHAiLA0KICAic2V0dGluZ3MiOiBbXQ0KfQ==",
    "image_viewer.html": ""
  },
  "package_info": {
    "format_version": "1.0",
    "created_at": "2025-08-09T17:51:21.009519",
    "packaged_by": "Sypnex OS App Packager",
    "source_directory": ".\\image_viewer"
  }
}