{
  "app_metadata": {
    "id": "18925909-8b3e-4c2d-ab7f-9f6ba0d30db4",
    "name": "Image Viewer",
    "description": "A simple image viewer for browsing and viewing images from the Virtual File System",
    "icon": "fas fa-image",
    "keywords": [
      "image_viewer",
      "image",
      "viewer",
      "photos",
      "pictures",
      "gallery"
    ],
    "author": "Sypnex OS",
    "version": "1.0.0",
    "type": "user_app",
    "settings": []
  },
  "files": {
    "18925909-8b3e-4c2d-ab7f-9f6ba0d30db4.app": "ew0KICAiaWQiOiAiMTg5MjU5MDktOGIzZS00YzJkLWFiN2YtOWY2YmEwZDMwZGI0IiwNCiAgIm5hbWUiOiAiSW1hZ2UgVmlld2VyIiwNCiAgImRlc2NyaXB0aW9uIjogIkEgc2ltcGxlIGltYWdlIHZpZXdlciBmb3IgYnJvd3NpbmcgYW5kIHZpZXdpbmcgaW1hZ2VzIGZyb20gdGhlIFZpcnR1YWwgRmlsZSBTeXN0ZW0iLA0KICAiaWNvbiI6ICJmYXMgZmEtaW1hZ2UiLA0KICAia2V5d29yZHMiOiBbDQogICAgImltYWdlX3ZpZXdlciIsDQogICAgImltYWdlIiwNCiAgICAidmlld2VyIiwNCiAgICAicGhvdG9zIiwNCiAgICAicGljdHVyZXMiLA0KICAgICJnYWxsZXJ5Ig0KICBdLA0KICAiYXV0aG9yIjogIlN5cG5leCBPUyIsDQogICJ2ZXJzaW9uIjogIjEuMC4wIiwNCiAgInR5cGUiOiAidXNlcl9hcHAiLA0KICAic2V0dGluZ3MiOiBbXQ0KfQ==",
    "18925909-8b3e-4c2d-ab7f-9f6ba0d30db4.html": ""
  },
  "package_info": {
    "format_version": "1.0",
    "created_at": "2025-08-16T03:39:53.798142",
    "packaged_by": "Sypnex OS App Packager",
    "source_directory": "C:\\Users\\bruce\\OneDrive\\Desktop\\AI Research\\sypnex-os-apps\\official\\image_viewer"
  }
}